'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("apotikDataSetview"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class apotikDataSetview
    Inherits Global.System.Data.DataSet
    
    Private tablenota_pembelian As nota_pembelianDataTable
    
    Private tablenota_penjualan As nota_penjualanDataTable
    
    Private tablenota_retur_beli As nota_retur_beliDataTable
    
    Private tablenota_retur_jual As nota_retur_jualDataTable
    
    Private tableprint_detail_stok As print_detail_stokDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("nota_pembelian")) Is Nothing) Then
                MyBase.Tables.Add(New nota_pembelianDataTable(ds.Tables("nota_pembelian")))
            End If
            If (Not (ds.Tables("nota_penjualan")) Is Nothing) Then
                MyBase.Tables.Add(New nota_penjualanDataTable(ds.Tables("nota_penjualan")))
            End If
            If (Not (ds.Tables("nota_retur_beli")) Is Nothing) Then
                MyBase.Tables.Add(New nota_retur_beliDataTable(ds.Tables("nota_retur_beli")))
            End If
            If (Not (ds.Tables("nota_retur_jual")) Is Nothing) Then
                MyBase.Tables.Add(New nota_retur_jualDataTable(ds.Tables("nota_retur_jual")))
            End If
            If (Not (ds.Tables("print_detail_stok")) Is Nothing) Then
                MyBase.Tables.Add(New print_detail_stokDataTable(ds.Tables("print_detail_stok")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property nota_pembelian() As nota_pembelianDataTable
        Get
            Return Me.tablenota_pembelian
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property nota_penjualan() As nota_penjualanDataTable
        Get
            Return Me.tablenota_penjualan
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property nota_retur_beli() As nota_retur_beliDataTable
        Get
            Return Me.tablenota_retur_beli
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property nota_retur_jual() As nota_retur_jualDataTable
        Get
            Return Me.tablenota_retur_jual
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property print_detail_stok() As print_detail_stokDataTable
        Get
            Return Me.tableprint_detail_stok
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As apotikDataSetview = CType(MyBase.Clone,apotikDataSetview)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("nota_pembelian")) Is Nothing) Then
                MyBase.Tables.Add(New nota_pembelianDataTable(ds.Tables("nota_pembelian")))
            End If
            If (Not (ds.Tables("nota_penjualan")) Is Nothing) Then
                MyBase.Tables.Add(New nota_penjualanDataTable(ds.Tables("nota_penjualan")))
            End If
            If (Not (ds.Tables("nota_retur_beli")) Is Nothing) Then
                MyBase.Tables.Add(New nota_retur_beliDataTable(ds.Tables("nota_retur_beli")))
            End If
            If (Not (ds.Tables("nota_retur_jual")) Is Nothing) Then
                MyBase.Tables.Add(New nota_retur_jualDataTable(ds.Tables("nota_retur_jual")))
            End If
            If (Not (ds.Tables("print_detail_stok")) Is Nothing) Then
                MyBase.Tables.Add(New print_detail_stokDataTable(ds.Tables("print_detail_stok")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablenota_pembelian = CType(MyBase.Tables("nota_pembelian"),nota_pembelianDataTable)
        If (initTable = true) Then
            If (Not (Me.tablenota_pembelian) Is Nothing) Then
                Me.tablenota_pembelian.InitVars
            End If
        End If
        Me.tablenota_penjualan = CType(MyBase.Tables("nota_penjualan"),nota_penjualanDataTable)
        If (initTable = true) Then
            If (Not (Me.tablenota_penjualan) Is Nothing) Then
                Me.tablenota_penjualan.InitVars
            End If
        End If
        Me.tablenota_retur_beli = CType(MyBase.Tables("nota_retur_beli"),nota_retur_beliDataTable)
        If (initTable = true) Then
            If (Not (Me.tablenota_retur_beli) Is Nothing) Then
                Me.tablenota_retur_beli.InitVars
            End If
        End If
        Me.tablenota_retur_jual = CType(MyBase.Tables("nota_retur_jual"),nota_retur_jualDataTable)
        If (initTable = true) Then
            If (Not (Me.tablenota_retur_jual) Is Nothing) Then
                Me.tablenota_retur_jual.InitVars
            End If
        End If
        Me.tableprint_detail_stok = CType(MyBase.Tables("print_detail_stok"),print_detail_stokDataTable)
        If (initTable = true) Then
            If (Not (Me.tableprint_detail_stok) Is Nothing) Then
                Me.tableprint_detail_stok.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "apotikDataSetview"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/apotikDataSetview.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablenota_pembelian = New nota_pembelianDataTable()
        MyBase.Tables.Add(Me.tablenota_pembelian)
        Me.tablenota_penjualan = New nota_penjualanDataTable()
        MyBase.Tables.Add(Me.tablenota_penjualan)
        Me.tablenota_retur_beli = New nota_retur_beliDataTable()
        MyBase.Tables.Add(Me.tablenota_retur_beli)
        Me.tablenota_retur_jual = New nota_retur_jualDataTable()
        MyBase.Tables.Add(Me.tablenota_retur_jual)
        Me.tableprint_detail_stok = New print_detail_stokDataTable()
        MyBase.Tables.Add(Me.tableprint_detail_stok)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializenota_pembelian() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializenota_penjualan() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializenota_retur_beli() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializenota_retur_jual() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeprint_detail_stok() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As apotikDataSetview = New apotikDataSetview()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub nota_pembelianRowChangeEventHandler(ByVal sender As Object, ByVal e As nota_pembelianRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub nota_penjualanRowChangeEventHandler(ByVal sender As Object, ByVal e As nota_penjualanRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub nota_retur_beliRowChangeEventHandler(ByVal sender As Object, ByVal e As nota_retur_beliRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub nota_retur_jualRowChangeEventHandler(ByVal sender As Object, ByVal e As nota_retur_jualRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub print_detail_stokRowChangeEventHandler(ByVal sender As Object, ByVal e As print_detail_stokRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class nota_pembelianDataTable
        Inherits Global.System.Data.TypedTableBase(Of nota_pembelianRow)
        
        Private columnno_nota_pembelian As Global.System.Data.DataColumn
        
        Private columntanggal_pembelian As Global.System.Data.DataColumn
        
        Private columnkode_supplier As Global.System.Data.DataColumn
        
        Private columntanggal_jt_pembelian As Global.System.Data.DataColumn
        
        Private columntotal_harga_pembelian As Global.System.Data.DataColumn
        
        Private columnkode_barang_pembelian As Global.System.Data.DataColumn
        
        Private columnnama_barang As Global.System.Data.DataColumn
        
        Private columnbatch_pembelian As Global.System.Data.DataColumn
        
        Private columnexpired_date As Global.System.Data.DataColumn
        
        Private columnharga_beli As Global.System.Data.DataColumn
        
        Private columnjumlah_barang As Global.System.Data.DataColumn
        
        Private columndiscount_percent As Global.System.Data.DataColumn
        
        Private columntotal_harga As Global.System.Data.DataColumn
        
        Private columndelete As Global.System.Data.DataColumn
        
        Private columnHapus As Global.System.Data.DataColumn
        
        Private columnretur As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "nota_pembelian"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property no_nota_pembelianColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_nota_pembelian
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tanggal_pembelianColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntanggal_pembelian
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kode_supplierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkode_supplier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tanggal_jt_pembelianColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntanggal_jt_pembelian
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property total_harga_pembelianColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_harga_pembelian
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kode_barang_pembelianColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkode_barang_pembelian
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nama_barangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnama_barang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property batch_pembelianColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbatch_pembelian
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property expired_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexpired_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property harga_beliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnharga_beli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property jumlah_barangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjumlah_barang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property discount_percentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_percent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property total_hargaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_harga
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property deleteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HapusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHapus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property returColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnretur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As nota_pembelianRow
            Get
                Return CType(Me.Rows(index),nota_pembelianRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event nota_pembelianRowChanging As nota_pembelianRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event nota_pembelianRowChanged As nota_pembelianRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event nota_pembelianRowDeleting As nota_pembelianRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event nota_pembelianRowDeleted As nota_pembelianRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addnota_pembelianRow(ByVal row As nota_pembelianRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addnota_pembelianRow( _
                    ByVal no_nota_pembelian As String,  _
                    ByVal tanggal_pembelian As Date,  _
                    ByVal kode_supplier As String,  _
                    ByVal tanggal_jt_pembelian As Date,  _
                    ByVal total_harga_pembelian As UInteger,  _
                    ByVal kode_barang_pembelian As String,  _
                    ByVal nama_barang As String,  _
                    ByVal batch_pembelian As String,  _
                    ByVal expired_date As Date,  _
                    ByVal harga_beli As UInteger,  _
                    ByVal jumlah_barang As UInteger,  _
                    ByVal discount_percent As UInteger,  _
                    ByVal total_harga As UInteger,  _
                    ByVal delete As UInteger,  _
                    ByVal Hapus As UInteger,  _
                    ByVal retur As UInteger) As nota_pembelianRow
            Dim rownota_pembelianRow As nota_pembelianRow = CType(Me.NewRow,nota_pembelianRow)
            Dim columnValuesArray() As Object = New Object() {no_nota_pembelian, tanggal_pembelian, kode_supplier, tanggal_jt_pembelian, total_harga_pembelian, kode_barang_pembelian, nama_barang, batch_pembelian, expired_date, harga_beli, jumlah_barang, discount_percent, total_harga, delete, Hapus, retur}
            rownota_pembelianRow.ItemArray = columnValuesArray
            Me.Rows.Add(rownota_pembelianRow)
            Return rownota_pembelianRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByno_nota_pembelian(ByVal no_nota_pembelian As String) As nota_pembelianRow
            Return CType(Me.Rows.Find(New Object() {no_nota_pembelian}),nota_pembelianRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As nota_pembelianDataTable = CType(MyBase.Clone,nota_pembelianDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New nota_pembelianDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnno_nota_pembelian = MyBase.Columns("no_nota_pembelian")
            Me.columntanggal_pembelian = MyBase.Columns("tanggal_pembelian")
            Me.columnkode_supplier = MyBase.Columns("kode_supplier")
            Me.columntanggal_jt_pembelian = MyBase.Columns("tanggal_jt_pembelian")
            Me.columntotal_harga_pembelian = MyBase.Columns("total_harga_pembelian")
            Me.columnkode_barang_pembelian = MyBase.Columns("kode_barang_pembelian")
            Me.columnnama_barang = MyBase.Columns("nama_barang")
            Me.columnbatch_pembelian = MyBase.Columns("batch_pembelian")
            Me.columnexpired_date = MyBase.Columns("expired_date")
            Me.columnharga_beli = MyBase.Columns("harga_beli")
            Me.columnjumlah_barang = MyBase.Columns("jumlah_barang")
            Me.columndiscount_percent = MyBase.Columns("discount_percent")
            Me.columntotal_harga = MyBase.Columns("total_harga")
            Me.columndelete = MyBase.Columns("delete")
            Me.columnHapus = MyBase.Columns("Hapus")
            Me.columnretur = MyBase.Columns("retur")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnno_nota_pembelian = New Global.System.Data.DataColumn("no_nota_pembelian", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_nota_pembelian)
            Me.columntanggal_pembelian = New Global.System.Data.DataColumn("tanggal_pembelian", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntanggal_pembelian)
            Me.columnkode_supplier = New Global.System.Data.DataColumn("kode_supplier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkode_supplier)
            Me.columntanggal_jt_pembelian = New Global.System.Data.DataColumn("tanggal_jt_pembelian", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntanggal_jt_pembelian)
            Me.columntotal_harga_pembelian = New Global.System.Data.DataColumn("total_harga_pembelian", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_harga_pembelian)
            Me.columnkode_barang_pembelian = New Global.System.Data.DataColumn("kode_barang_pembelian", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkode_barang_pembelian)
            Me.columnnama_barang = New Global.System.Data.DataColumn("nama_barang", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnama_barang)
            Me.columnbatch_pembelian = New Global.System.Data.DataColumn("batch_pembelian", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbatch_pembelian)
            Me.columnexpired_date = New Global.System.Data.DataColumn("expired_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexpired_date)
            Me.columnharga_beli = New Global.System.Data.DataColumn("harga_beli", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnharga_beli)
            Me.columnjumlah_barang = New Global.System.Data.DataColumn("jumlah_barang", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjumlah_barang)
            Me.columndiscount_percent = New Global.System.Data.DataColumn("discount_percent", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_percent)
            Me.columntotal_harga = New Global.System.Data.DataColumn("total_harga", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_harga)
            Me.columndelete = New Global.System.Data.DataColumn("delete", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelete)
            Me.columnHapus = New Global.System.Data.DataColumn("Hapus", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHapus)
            Me.columnretur = New Global.System.Data.DataColumn("retur", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnretur)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnno_nota_pembelian}, true))
            Me.columnno_nota_pembelian.AllowDBNull = false
            Me.columnno_nota_pembelian.Unique = true
            Me.columnno_nota_pembelian.MaxLength = 45
            Me.columntanggal_pembelian.AllowDBNull = false
            Me.columnkode_supplier.AllowDBNull = false
            Me.columnkode_supplier.MaxLength = 45
            Me.columntanggal_jt_pembelian.AllowDBNull = false
            Me.columntotal_harga_pembelian.AllowDBNull = false
            Me.columnkode_barang_pembelian.AllowDBNull = false
            Me.columnkode_barang_pembelian.MaxLength = 45
            Me.columnnama_barang.AllowDBNull = false
            Me.columnnama_barang.MaxLength = 45
            Me.columnbatch_pembelian.AllowDBNull = false
            Me.columnbatch_pembelian.MaxLength = 45
            Me.columnexpired_date.AllowDBNull = false
            Me.columnharga_beli.AllowDBNull = false
            Me.columnjumlah_barang.AllowDBNull = false
            Me.columndiscount_percent.AllowDBNull = false
            Me.columntotal_harga.AllowDBNull = false
            Me.columndelete.AllowDBNull = false
            Me.columnHapus.AllowDBNull = false
            Me.columnretur.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newnota_pembelianRow() As nota_pembelianRow
            Return CType(Me.NewRow,nota_pembelianRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New nota_pembelianRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(nota_pembelianRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.nota_pembelianRowChangedEvent) Is Nothing) Then
                RaiseEvent nota_pembelianRowChanged(Me, New nota_pembelianRowChangeEvent(CType(e.Row,nota_pembelianRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.nota_pembelianRowChangingEvent) Is Nothing) Then
                RaiseEvent nota_pembelianRowChanging(Me, New nota_pembelianRowChangeEvent(CType(e.Row,nota_pembelianRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.nota_pembelianRowDeletedEvent) Is Nothing) Then
                RaiseEvent nota_pembelianRowDeleted(Me, New nota_pembelianRowChangeEvent(CType(e.Row,nota_pembelianRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.nota_pembelianRowDeletingEvent) Is Nothing) Then
                RaiseEvent nota_pembelianRowDeleting(Me, New nota_pembelianRowChangeEvent(CType(e.Row,nota_pembelianRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removenota_pembelianRow(ByVal row As nota_pembelianRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As apotikDataSetview = New apotikDataSetview()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "nota_pembelianDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class nota_penjualanDataTable
        Inherits Global.System.Data.TypedTableBase(Of nota_penjualanRow)
        
        Private columnno_nota_penjualan As Global.System.Data.DataColumn
        
        Private columnno_pajak As Global.System.Data.DataColumn
        
        Private columntanggal_penjualan As Global.System.Data.DataColumn
        
        Private columnkode_customer As Global.System.Data.DataColumn
        
        Private columntanggal_jt_penjualan As Global.System.Data.DataColumn
        
        Private columntotal_harga_penjualan As Global.System.Data.DataColumn
        
        Private columnkode_barang As Global.System.Data.DataColumn
        
        Private columnnama_barang As Global.System.Data.DataColumn
        
        Private columnbatch As Global.System.Data.DataColumn
        
        Private columnexpired_date As Global.System.Data.DataColumn
        
        Private columnharga_jual As Global.System.Data.DataColumn
        
        Private columnjumlah_barang As Global.System.Data.DataColumn
        
        Private columndiscount_percent As Global.System.Data.DataColumn
        
        Private columntotal_harga As Global.System.Data.DataColumn
        
        Private columndelete As Global.System.Data.DataColumn
        
        Private columnHapus As Global.System.Data.DataColumn
        
        Private columnretur As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "nota_penjualan"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property no_nota_penjualanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_nota_penjualan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property no_pajakColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_pajak
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tanggal_penjualanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntanggal_penjualan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kode_customerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkode_customer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tanggal_jt_penjualanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntanggal_jt_penjualan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property total_harga_penjualanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_harga_penjualan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kode_barangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkode_barang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nama_barangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnama_barang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property batchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbatch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property expired_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexpired_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property harga_jualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnharga_jual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property jumlah_barangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjumlah_barang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property discount_percentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_percent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property total_hargaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_harga
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property deleteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HapusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHapus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property returColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnretur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As nota_penjualanRow
            Get
                Return CType(Me.Rows(index),nota_penjualanRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event nota_penjualanRowChanging As nota_penjualanRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event nota_penjualanRowChanged As nota_penjualanRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event nota_penjualanRowDeleting As nota_penjualanRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event nota_penjualanRowDeleted As nota_penjualanRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addnota_penjualanRow(ByVal row As nota_penjualanRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addnota_penjualanRow( _
                    ByVal no_nota_penjualan As String,  _
                    ByVal no_pajak As String,  _
                    ByVal tanggal_penjualan As Date,  _
                    ByVal kode_customer As String,  _
                    ByVal tanggal_jt_penjualan As Date,  _
                    ByVal total_harga_penjualan As Integer,  _
                    ByVal kode_barang As String,  _
                    ByVal nama_barang As String,  _
                    ByVal batch As String,  _
                    ByVal expired_date As Date,  _
                    ByVal harga_jual As UInteger,  _
                    ByVal jumlah_barang As UInteger,  _
                    ByVal discount_percent As UInteger,  _
                    ByVal total_harga As UInteger,  _
                    ByVal delete As UInteger,  _
                    ByVal Hapus As UInteger,  _
                    ByVal retur As UInteger) As nota_penjualanRow
            Dim rownota_penjualanRow As nota_penjualanRow = CType(Me.NewRow,nota_penjualanRow)
            Dim columnValuesArray() As Object = New Object() {no_nota_penjualan, no_pajak, tanggal_penjualan, kode_customer, tanggal_jt_penjualan, total_harga_penjualan, kode_barang, nama_barang, batch, expired_date, harga_jual, jumlah_barang, discount_percent, total_harga, delete, Hapus, retur}
            rownota_penjualanRow.ItemArray = columnValuesArray
            Me.Rows.Add(rownota_penjualanRow)
            Return rownota_penjualanRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByno_nota_penjualan(ByVal no_nota_penjualan As String) As nota_penjualanRow
            Return CType(Me.Rows.Find(New Object() {no_nota_penjualan}),nota_penjualanRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As nota_penjualanDataTable = CType(MyBase.Clone,nota_penjualanDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New nota_penjualanDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnno_nota_penjualan = MyBase.Columns("no_nota_penjualan")
            Me.columnno_pajak = MyBase.Columns("no_pajak")
            Me.columntanggal_penjualan = MyBase.Columns("tanggal_penjualan")
            Me.columnkode_customer = MyBase.Columns("kode_customer")
            Me.columntanggal_jt_penjualan = MyBase.Columns("tanggal_jt_penjualan")
            Me.columntotal_harga_penjualan = MyBase.Columns("total_harga_penjualan")
            Me.columnkode_barang = MyBase.Columns("kode_barang")
            Me.columnnama_barang = MyBase.Columns("nama_barang")
            Me.columnbatch = MyBase.Columns("batch")
            Me.columnexpired_date = MyBase.Columns("expired_date")
            Me.columnharga_jual = MyBase.Columns("harga_jual")
            Me.columnjumlah_barang = MyBase.Columns("jumlah_barang")
            Me.columndiscount_percent = MyBase.Columns("discount_percent")
            Me.columntotal_harga = MyBase.Columns("total_harga")
            Me.columndelete = MyBase.Columns("delete")
            Me.columnHapus = MyBase.Columns("Hapus")
            Me.columnretur = MyBase.Columns("retur")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnno_nota_penjualan = New Global.System.Data.DataColumn("no_nota_penjualan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_nota_penjualan)
            Me.columnno_pajak = New Global.System.Data.DataColumn("no_pajak", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_pajak)
            Me.columntanggal_penjualan = New Global.System.Data.DataColumn("tanggal_penjualan", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntanggal_penjualan)
            Me.columnkode_customer = New Global.System.Data.DataColumn("kode_customer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkode_customer)
            Me.columntanggal_jt_penjualan = New Global.System.Data.DataColumn("tanggal_jt_penjualan", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntanggal_jt_penjualan)
            Me.columntotal_harga_penjualan = New Global.System.Data.DataColumn("total_harga_penjualan", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_harga_penjualan)
            Me.columnkode_barang = New Global.System.Data.DataColumn("kode_barang", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkode_barang)
            Me.columnnama_barang = New Global.System.Data.DataColumn("nama_barang", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnama_barang)
            Me.columnbatch = New Global.System.Data.DataColumn("batch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbatch)
            Me.columnexpired_date = New Global.System.Data.DataColumn("expired_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexpired_date)
            Me.columnharga_jual = New Global.System.Data.DataColumn("harga_jual", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnharga_jual)
            Me.columnjumlah_barang = New Global.System.Data.DataColumn("jumlah_barang", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjumlah_barang)
            Me.columndiscount_percent = New Global.System.Data.DataColumn("discount_percent", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_percent)
            Me.columntotal_harga = New Global.System.Data.DataColumn("total_harga", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_harga)
            Me.columndelete = New Global.System.Data.DataColumn("delete", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelete)
            Me.columnHapus = New Global.System.Data.DataColumn("Hapus", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHapus)
            Me.columnretur = New Global.System.Data.DataColumn("retur", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnretur)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnno_nota_penjualan}, true))
            Me.columnno_nota_penjualan.AllowDBNull = false
            Me.columnno_nota_penjualan.Unique = true
            Me.columnno_nota_penjualan.MaxLength = 45
            Me.columnno_pajak.AllowDBNull = false
            Me.columnno_pajak.MaxLength = 45
            Me.columntanggal_penjualan.AllowDBNull = false
            Me.columnkode_customer.AllowDBNull = false
            Me.columnkode_customer.MaxLength = 45
            Me.columntanggal_jt_penjualan.AllowDBNull = false
            Me.columntotal_harga_penjualan.AllowDBNull = false
            Me.columnkode_barang.AllowDBNull = false
            Me.columnkode_barang.MaxLength = 45
            Me.columnnama_barang.AllowDBNull = false
            Me.columnnama_barang.MaxLength = 45
            Me.columnbatch.AllowDBNull = false
            Me.columnbatch.MaxLength = 45
            Me.columnexpired_date.AllowDBNull = false
            Me.columnharga_jual.AllowDBNull = false
            Me.columnjumlah_barang.AllowDBNull = false
            Me.columndiscount_percent.AllowDBNull = false
            Me.columntotal_harga.AllowDBNull = false
            Me.columndelete.AllowDBNull = false
            Me.columnHapus.AllowDBNull = false
            Me.columnretur.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newnota_penjualanRow() As nota_penjualanRow
            Return CType(Me.NewRow,nota_penjualanRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New nota_penjualanRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(nota_penjualanRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.nota_penjualanRowChangedEvent) Is Nothing) Then
                RaiseEvent nota_penjualanRowChanged(Me, New nota_penjualanRowChangeEvent(CType(e.Row,nota_penjualanRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.nota_penjualanRowChangingEvent) Is Nothing) Then
                RaiseEvent nota_penjualanRowChanging(Me, New nota_penjualanRowChangeEvent(CType(e.Row,nota_penjualanRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.nota_penjualanRowDeletedEvent) Is Nothing) Then
                RaiseEvent nota_penjualanRowDeleted(Me, New nota_penjualanRowChangeEvent(CType(e.Row,nota_penjualanRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.nota_penjualanRowDeletingEvent) Is Nothing) Then
                RaiseEvent nota_penjualanRowDeleting(Me, New nota_penjualanRowChangeEvent(CType(e.Row,nota_penjualanRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removenota_penjualanRow(ByVal row As nota_penjualanRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As apotikDataSetview = New apotikDataSetview()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "nota_penjualanDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class nota_retur_beliDataTable
        Inherits Global.System.Data.TypedTableBase(Of nota_retur_beliRow)
        
        Private columnno_retur_pembelian As Global.System.Data.DataColumn
        
        Private columntanggal_retur_pembelian As Global.System.Data.DataColumn
        
        Private columnkode_supplier As Global.System.Data.DataColumn
        
        Private columnno_nota_pembelian As Global.System.Data.DataColumn
        
        Private columntotalharga_retur_pembelian As Global.System.Data.DataColumn
        
        Private columnkode_barang As Global.System.Data.DataColumn
        
        Private columnnama_barang As Global.System.Data.DataColumn
        
        Private columnbatch As Global.System.Data.DataColumn
        
        Private columnexpired_date As Global.System.Data.DataColumn
        
        Private columnharga_beli As Global.System.Data.DataColumn
        
        Private columnjumlah_barang As Global.System.Data.DataColumn
        
        Private columndiscount_percent As Global.System.Data.DataColumn
        
        Private columntotal_harga As Global.System.Data.DataColumn
        
        Private columndelete As Global.System.Data.DataColumn
        
        Private columnretur As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "nota_retur_beli"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property no_retur_pembelianColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_retur_pembelian
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tanggal_retur_pembelianColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntanggal_retur_pembelian
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kode_supplierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkode_supplier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property no_nota_pembelianColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_nota_pembelian
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalharga_retur_pembelianColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotalharga_retur_pembelian
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kode_barangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkode_barang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nama_barangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnama_barang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property batchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbatch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property expired_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexpired_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property harga_beliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnharga_beli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property jumlah_barangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjumlah_barang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property discount_percentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_percent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property total_hargaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_harga
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property deleteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property returColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnretur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As nota_retur_beliRow
            Get
                Return CType(Me.Rows(index),nota_retur_beliRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event nota_retur_beliRowChanging As nota_retur_beliRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event nota_retur_beliRowChanged As nota_retur_beliRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event nota_retur_beliRowDeleting As nota_retur_beliRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event nota_retur_beliRowDeleted As nota_retur_beliRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addnota_retur_beliRow(ByVal row As nota_retur_beliRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addnota_retur_beliRow(ByVal no_retur_pembelian As String, ByVal tanggal_retur_pembelian As Date, ByVal kode_supplier As String, ByVal no_nota_pembelian As String, ByVal totalharga_retur_pembelian As UInteger, ByVal kode_barang As String, ByVal nama_barang As String, ByVal batch As String, ByVal expired_date As Date, ByVal harga_beli As UInteger, ByVal jumlah_barang As UInteger, ByVal discount_percent As UInteger, ByVal total_harga As UInteger, ByVal delete As UInteger, ByVal retur As UInteger) As nota_retur_beliRow
            Dim rownota_retur_beliRow As nota_retur_beliRow = CType(Me.NewRow,nota_retur_beliRow)
            Dim columnValuesArray() As Object = New Object() {no_retur_pembelian, tanggal_retur_pembelian, kode_supplier, no_nota_pembelian, totalharga_retur_pembelian, kode_barang, nama_barang, batch, expired_date, harga_beli, jumlah_barang, discount_percent, total_harga, delete, retur}
            rownota_retur_beliRow.ItemArray = columnValuesArray
            Me.Rows.Add(rownota_retur_beliRow)
            Return rownota_retur_beliRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByno_retur_pembelian(ByVal no_retur_pembelian As String) As nota_retur_beliRow
            Return CType(Me.Rows.Find(New Object() {no_retur_pembelian}),nota_retur_beliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As nota_retur_beliDataTable = CType(MyBase.Clone,nota_retur_beliDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New nota_retur_beliDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnno_retur_pembelian = MyBase.Columns("no_retur_pembelian")
            Me.columntanggal_retur_pembelian = MyBase.Columns("tanggal_retur_pembelian")
            Me.columnkode_supplier = MyBase.Columns("kode_supplier")
            Me.columnno_nota_pembelian = MyBase.Columns("no_nota_pembelian")
            Me.columntotalharga_retur_pembelian = MyBase.Columns("totalharga_retur_pembelian")
            Me.columnkode_barang = MyBase.Columns("kode_barang")
            Me.columnnama_barang = MyBase.Columns("nama_barang")
            Me.columnbatch = MyBase.Columns("batch")
            Me.columnexpired_date = MyBase.Columns("expired_date")
            Me.columnharga_beli = MyBase.Columns("harga_beli")
            Me.columnjumlah_barang = MyBase.Columns("jumlah_barang")
            Me.columndiscount_percent = MyBase.Columns("discount_percent")
            Me.columntotal_harga = MyBase.Columns("total_harga")
            Me.columndelete = MyBase.Columns("delete")
            Me.columnretur = MyBase.Columns("retur")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnno_retur_pembelian = New Global.System.Data.DataColumn("no_retur_pembelian", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_retur_pembelian)
            Me.columntanggal_retur_pembelian = New Global.System.Data.DataColumn("tanggal_retur_pembelian", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntanggal_retur_pembelian)
            Me.columnkode_supplier = New Global.System.Data.DataColumn("kode_supplier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkode_supplier)
            Me.columnno_nota_pembelian = New Global.System.Data.DataColumn("no_nota_pembelian", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_nota_pembelian)
            Me.columntotalharga_retur_pembelian = New Global.System.Data.DataColumn("totalharga_retur_pembelian", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotalharga_retur_pembelian)
            Me.columnkode_barang = New Global.System.Data.DataColumn("kode_barang", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkode_barang)
            Me.columnnama_barang = New Global.System.Data.DataColumn("nama_barang", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnama_barang)
            Me.columnbatch = New Global.System.Data.DataColumn("batch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbatch)
            Me.columnexpired_date = New Global.System.Data.DataColumn("expired_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexpired_date)
            Me.columnharga_beli = New Global.System.Data.DataColumn("harga_beli", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnharga_beli)
            Me.columnjumlah_barang = New Global.System.Data.DataColumn("jumlah_barang", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjumlah_barang)
            Me.columndiscount_percent = New Global.System.Data.DataColumn("discount_percent", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_percent)
            Me.columntotal_harga = New Global.System.Data.DataColumn("total_harga", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_harga)
            Me.columndelete = New Global.System.Data.DataColumn("delete", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelete)
            Me.columnretur = New Global.System.Data.DataColumn("retur", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnretur)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnno_retur_pembelian}, true))
            Me.columnno_retur_pembelian.AllowDBNull = false
            Me.columnno_retur_pembelian.Unique = true
            Me.columnno_retur_pembelian.MaxLength = 45
            Me.columntanggal_retur_pembelian.AllowDBNull = false
            Me.columnkode_supplier.AllowDBNull = false
            Me.columnkode_supplier.MaxLength = 45
            Me.columnno_nota_pembelian.AllowDBNull = false
            Me.columnno_nota_pembelian.MaxLength = 45
            Me.columntotalharga_retur_pembelian.AllowDBNull = false
            Me.columnkode_barang.AllowDBNull = false
            Me.columnkode_barang.MaxLength = 45
            Me.columnnama_barang.AllowDBNull = false
            Me.columnnama_barang.MaxLength = 45
            Me.columnbatch.AllowDBNull = false
            Me.columnbatch.MaxLength = 45
            Me.columnexpired_date.AllowDBNull = false
            Me.columnharga_beli.AllowDBNull = false
            Me.columnjumlah_barang.AllowDBNull = false
            Me.columndiscount_percent.AllowDBNull = false
            Me.columntotal_harga.AllowDBNull = false
            Me.columndelete.AllowDBNull = false
            Me.columnretur.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newnota_retur_beliRow() As nota_retur_beliRow
            Return CType(Me.NewRow,nota_retur_beliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New nota_retur_beliRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(nota_retur_beliRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.nota_retur_beliRowChangedEvent) Is Nothing) Then
                RaiseEvent nota_retur_beliRowChanged(Me, New nota_retur_beliRowChangeEvent(CType(e.Row,nota_retur_beliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.nota_retur_beliRowChangingEvent) Is Nothing) Then
                RaiseEvent nota_retur_beliRowChanging(Me, New nota_retur_beliRowChangeEvent(CType(e.Row,nota_retur_beliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.nota_retur_beliRowDeletedEvent) Is Nothing) Then
                RaiseEvent nota_retur_beliRowDeleted(Me, New nota_retur_beliRowChangeEvent(CType(e.Row,nota_retur_beliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.nota_retur_beliRowDeletingEvent) Is Nothing) Then
                RaiseEvent nota_retur_beliRowDeleting(Me, New nota_retur_beliRowChangeEvent(CType(e.Row,nota_retur_beliRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removenota_retur_beliRow(ByVal row As nota_retur_beliRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As apotikDataSetview = New apotikDataSetview()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "nota_retur_beliDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class nota_retur_jualDataTable
        Inherits Global.System.Data.TypedTableBase(Of nota_retur_jualRow)
        
        Private columnno_retur_penjualan As Global.System.Data.DataColumn
        
        Private columntanggal_retur_penjualan As Global.System.Data.DataColumn
        
        Private columnkode_cust As Global.System.Data.DataColumn
        
        Private columnno_nota_penjualan As Global.System.Data.DataColumn
        
        Private columntotalharga_retur_penjualan As Global.System.Data.DataColumn
        
        Private columnkode_barang As Global.System.Data.DataColumn
        
        Private columnnama_barang As Global.System.Data.DataColumn
        
        Private columnbatch As Global.System.Data.DataColumn
        
        Private columnexpired_date As Global.System.Data.DataColumn
        
        Private columnharga_jual As Global.System.Data.DataColumn
        
        Private columnjumlah_barang As Global.System.Data.DataColumn
        
        Private columndiscount_percent As Global.System.Data.DataColumn
        
        Private columntotal_harga As Global.System.Data.DataColumn
        
        Private columndelete As Global.System.Data.DataColumn
        
        Private columnretur As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "nota_retur_jual"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property no_retur_penjualanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_retur_penjualan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tanggal_retur_penjualanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntanggal_retur_penjualan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kode_custColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkode_cust
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property no_nota_penjualanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_nota_penjualan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalharga_retur_penjualanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotalharga_retur_penjualan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kode_barangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkode_barang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nama_barangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnama_barang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property batchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbatch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property expired_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexpired_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property harga_jualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnharga_jual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property jumlah_barangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjumlah_barang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property discount_percentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndiscount_percent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property total_hargaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_harga
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property deleteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndelete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property returColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnretur
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As nota_retur_jualRow
            Get
                Return CType(Me.Rows(index),nota_retur_jualRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event nota_retur_jualRowChanging As nota_retur_jualRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event nota_retur_jualRowChanged As nota_retur_jualRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event nota_retur_jualRowDeleting As nota_retur_jualRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event nota_retur_jualRowDeleted As nota_retur_jualRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addnota_retur_jualRow(ByVal row As nota_retur_jualRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addnota_retur_jualRow(ByVal no_retur_penjualan As String, ByVal tanggal_retur_penjualan As Date, ByVal kode_cust As String, ByVal no_nota_penjualan As String, ByVal totalharga_retur_penjualan As UInteger, ByVal kode_barang As String, ByVal nama_barang As String, ByVal batch As String, ByVal expired_date As Date, ByVal harga_jual As UInteger, ByVal jumlah_barang As UInteger, ByVal discount_percent As UInteger, ByVal total_harga As UInteger, ByVal delete As UInteger, ByVal retur As UInteger) As nota_retur_jualRow
            Dim rownota_retur_jualRow As nota_retur_jualRow = CType(Me.NewRow,nota_retur_jualRow)
            Dim columnValuesArray() As Object = New Object() {no_retur_penjualan, tanggal_retur_penjualan, kode_cust, no_nota_penjualan, totalharga_retur_penjualan, kode_barang, nama_barang, batch, expired_date, harga_jual, jumlah_barang, discount_percent, total_harga, delete, retur}
            rownota_retur_jualRow.ItemArray = columnValuesArray
            Me.Rows.Add(rownota_retur_jualRow)
            Return rownota_retur_jualRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByno_retur_penjualan(ByVal no_retur_penjualan As String) As nota_retur_jualRow
            Return CType(Me.Rows.Find(New Object() {no_retur_penjualan}),nota_retur_jualRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As nota_retur_jualDataTable = CType(MyBase.Clone,nota_retur_jualDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New nota_retur_jualDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnno_retur_penjualan = MyBase.Columns("no_retur_penjualan")
            Me.columntanggal_retur_penjualan = MyBase.Columns("tanggal_retur_penjualan")
            Me.columnkode_cust = MyBase.Columns("kode_cust")
            Me.columnno_nota_penjualan = MyBase.Columns("no_nota_penjualan")
            Me.columntotalharga_retur_penjualan = MyBase.Columns("totalharga_retur_penjualan")
            Me.columnkode_barang = MyBase.Columns("kode_barang")
            Me.columnnama_barang = MyBase.Columns("nama_barang")
            Me.columnbatch = MyBase.Columns("batch")
            Me.columnexpired_date = MyBase.Columns("expired_date")
            Me.columnharga_jual = MyBase.Columns("harga_jual")
            Me.columnjumlah_barang = MyBase.Columns("jumlah_barang")
            Me.columndiscount_percent = MyBase.Columns("discount_percent")
            Me.columntotal_harga = MyBase.Columns("total_harga")
            Me.columndelete = MyBase.Columns("delete")
            Me.columnretur = MyBase.Columns("retur")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnno_retur_penjualan = New Global.System.Data.DataColumn("no_retur_penjualan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_retur_penjualan)
            Me.columntanggal_retur_penjualan = New Global.System.Data.DataColumn("tanggal_retur_penjualan", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntanggal_retur_penjualan)
            Me.columnkode_cust = New Global.System.Data.DataColumn("kode_cust", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkode_cust)
            Me.columnno_nota_penjualan = New Global.System.Data.DataColumn("no_nota_penjualan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_nota_penjualan)
            Me.columntotalharga_retur_penjualan = New Global.System.Data.DataColumn("totalharga_retur_penjualan", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotalharga_retur_penjualan)
            Me.columnkode_barang = New Global.System.Data.DataColumn("kode_barang", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkode_barang)
            Me.columnnama_barang = New Global.System.Data.DataColumn("nama_barang", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnama_barang)
            Me.columnbatch = New Global.System.Data.DataColumn("batch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbatch)
            Me.columnexpired_date = New Global.System.Data.DataColumn("expired_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexpired_date)
            Me.columnharga_jual = New Global.System.Data.DataColumn("harga_jual", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnharga_jual)
            Me.columnjumlah_barang = New Global.System.Data.DataColumn("jumlah_barang", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjumlah_barang)
            Me.columndiscount_percent = New Global.System.Data.DataColumn("discount_percent", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndiscount_percent)
            Me.columntotal_harga = New Global.System.Data.DataColumn("total_harga", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_harga)
            Me.columndelete = New Global.System.Data.DataColumn("delete", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndelete)
            Me.columnretur = New Global.System.Data.DataColumn("retur", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnretur)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnno_retur_penjualan}, true))
            Me.columnno_retur_penjualan.AllowDBNull = false
            Me.columnno_retur_penjualan.Unique = true
            Me.columnno_retur_penjualan.MaxLength = 45
            Me.columntanggal_retur_penjualan.AllowDBNull = false
            Me.columnkode_cust.AllowDBNull = false
            Me.columnkode_cust.MaxLength = 45
            Me.columnno_nota_penjualan.AllowDBNull = false
            Me.columnno_nota_penjualan.MaxLength = 45
            Me.columntotalharga_retur_penjualan.AllowDBNull = false
            Me.columnkode_barang.AllowDBNull = false
            Me.columnkode_barang.MaxLength = 45
            Me.columnnama_barang.AllowDBNull = false
            Me.columnnama_barang.MaxLength = 45
            Me.columnbatch.AllowDBNull = false
            Me.columnbatch.MaxLength = 45
            Me.columnexpired_date.AllowDBNull = false
            Me.columnharga_jual.AllowDBNull = false
            Me.columnjumlah_barang.AllowDBNull = false
            Me.columndiscount_percent.AllowDBNull = false
            Me.columntotal_harga.AllowDBNull = false
            Me.columndelete.AllowDBNull = false
            Me.columnretur.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newnota_retur_jualRow() As nota_retur_jualRow
            Return CType(Me.NewRow,nota_retur_jualRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New nota_retur_jualRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(nota_retur_jualRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.nota_retur_jualRowChangedEvent) Is Nothing) Then
                RaiseEvent nota_retur_jualRowChanged(Me, New nota_retur_jualRowChangeEvent(CType(e.Row,nota_retur_jualRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.nota_retur_jualRowChangingEvent) Is Nothing) Then
                RaiseEvent nota_retur_jualRowChanging(Me, New nota_retur_jualRowChangeEvent(CType(e.Row,nota_retur_jualRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.nota_retur_jualRowDeletedEvent) Is Nothing) Then
                RaiseEvent nota_retur_jualRowDeleted(Me, New nota_retur_jualRowChangeEvent(CType(e.Row,nota_retur_jualRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.nota_retur_jualRowDeletingEvent) Is Nothing) Then
                RaiseEvent nota_retur_jualRowDeleting(Me, New nota_retur_jualRowChangeEvent(CType(e.Row,nota_retur_jualRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removenota_retur_jualRow(ByVal row As nota_retur_jualRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As apotikDataSetview = New apotikDataSetview()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "nota_retur_jualDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class print_detail_stokDataTable
        Inherits Global.System.Data.TypedTableBase(Of print_detail_stokRow)
        
        Private columnno_nota As Global.System.Data.DataColumn
        
        Private columnkode_barang As Global.System.Data.DataColumn
        
        Private columnnama_barang As Global.System.Data.DataColumn
        
        Private columnbatch As Global.System.Data.DataColumn
        
        Private columnexpired_date As Global.System.Data.DataColumn
        
        Private columnjumlah_barang As Global.System.Data.DataColumn
        
        Private columntanggal As Global.System.Data.DataColumn
        
        Private columnketerangan As Global.System.Data.DataColumn
        
        Private columnstatus As Global.System.Data.DataColumn
        
        Private columnno_nota_pembelian As Global.System.Data.DataColumn
        
        Private columntanggal_pembelian As Global.System.Data.DataColumn
        
        Private columnkode_supplier As Global.System.Data.DataColumn
        
        Private columntanggal_jt_pembelian As Global.System.Data.DataColumn
        
        Private columntotal_harga_pembelian As Global.System.Data.DataColumn
        
        Private columnstatus_pembelian As Global.System.Data.DataColumn
        
        Private columnno_nota_penjualan As Global.System.Data.DataColumn
        
        Private columntanggal_penjualan As Global.System.Data.DataColumn
        
        Private columnkode_customer As Global.System.Data.DataColumn
        
        Private columntanggal_jt_penjualan As Global.System.Data.DataColumn
        
        Private columntotal_harga_penjualan As Global.System.Data.DataColumn
        
        Private columnstatus_penjualan As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "print_detail_stok"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property no_notaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_nota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kode_barangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkode_barang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nama_barangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnama_barang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property batchColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbatch
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property expired_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnexpired_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property jumlah_barangColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnjumlah_barang
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tanggalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntanggal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property keteranganColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnketerangan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property no_nota_pembelianColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_nota_pembelian
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tanggal_pembelianColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntanggal_pembelian
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kode_supplierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkode_supplier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tanggal_jt_pembelianColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntanggal_jt_pembelian
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property total_harga_pembelianColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_harga_pembelian
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property status_pembelianColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstatus_pembelian
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property no_nota_penjualanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnno_nota_penjualan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tanggal_penjualanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntanggal_penjualan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property kode_customerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnkode_customer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property tanggal_jt_penjualanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntanggal_jt_penjualan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property total_harga_penjualanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_harga_penjualan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property status_penjualanColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstatus_penjualan
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As print_detail_stokRow
            Get
                Return CType(Me.Rows(index),print_detail_stokRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event print_detail_stokRowChanging As print_detail_stokRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event print_detail_stokRowChanged As print_detail_stokRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event print_detail_stokRowDeleting As print_detail_stokRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event print_detail_stokRowDeleted As print_detail_stokRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addprint_detail_stokRow(ByVal row As print_detail_stokRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addprint_detail_stokRow( _
                    ByVal no_nota As String,  _
                    ByVal kode_barang As String,  _
                    ByVal nama_barang As String,  _
                    ByVal batch As String,  _
                    ByVal expired_date As String,  _
                    ByVal jumlah_barang As String,  _
                    ByVal tanggal As String,  _
                    ByVal keterangan As String,  _
                    ByVal status As UInteger,  _
                    ByVal no_nota_pembelian As String,  _
                    ByVal tanggal_pembelian As Date,  _
                    ByVal kode_supplier As String,  _
                    ByVal tanggal_jt_pembelian As Date,  _
                    ByVal total_harga_pembelian As UInteger,  _
                    ByVal status_pembelian As UInteger,  _
                    ByVal no_nota_penjualan As String,  _
                    ByVal tanggal_penjualan As Date,  _
                    ByVal kode_customer As String,  _
                    ByVal tanggal_jt_penjualan As Date,  _
                    ByVal total_harga_penjualan As Integer,  _
                    ByVal status_penjualan As UInteger) As print_detail_stokRow
            Dim rowprint_detail_stokRow As print_detail_stokRow = CType(Me.NewRow,print_detail_stokRow)
            Dim columnValuesArray() As Object = New Object() {no_nota, kode_barang, nama_barang, batch, expired_date, jumlah_barang, tanggal, keterangan, status, no_nota_pembelian, tanggal_pembelian, kode_supplier, tanggal_jt_pembelian, total_harga_pembelian, status_pembelian, no_nota_penjualan, tanggal_penjualan, kode_customer, tanggal_jt_penjualan, total_harga_penjualan, status_penjualan}
            rowprint_detail_stokRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowprint_detail_stokRow)
            Return rowprint_detail_stokRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByno_nota_pembelianno_nota_penjualan(ByVal no_nota_pembelian As String, ByVal no_nota_penjualan As String) As print_detail_stokRow
            Return CType(Me.Rows.Find(New Object() {no_nota_pembelian, no_nota_penjualan}),print_detail_stokRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As print_detail_stokDataTable = CType(MyBase.Clone,print_detail_stokDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New print_detail_stokDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnno_nota = MyBase.Columns("no_nota")
            Me.columnkode_barang = MyBase.Columns("kode_barang")
            Me.columnnama_barang = MyBase.Columns("nama_barang")
            Me.columnbatch = MyBase.Columns("batch")
            Me.columnexpired_date = MyBase.Columns("expired_date")
            Me.columnjumlah_barang = MyBase.Columns("jumlah_barang")
            Me.columntanggal = MyBase.Columns("tanggal")
            Me.columnketerangan = MyBase.Columns("keterangan")
            Me.columnstatus = MyBase.Columns("status")
            Me.columnno_nota_pembelian = MyBase.Columns("no_nota_pembelian")
            Me.columntanggal_pembelian = MyBase.Columns("tanggal_pembelian")
            Me.columnkode_supplier = MyBase.Columns("kode_supplier")
            Me.columntanggal_jt_pembelian = MyBase.Columns("tanggal_jt_pembelian")
            Me.columntotal_harga_pembelian = MyBase.Columns("total_harga_pembelian")
            Me.columnstatus_pembelian = MyBase.Columns("status_pembelian")
            Me.columnno_nota_penjualan = MyBase.Columns("no_nota_penjualan")
            Me.columntanggal_penjualan = MyBase.Columns("tanggal_penjualan")
            Me.columnkode_customer = MyBase.Columns("kode_customer")
            Me.columntanggal_jt_penjualan = MyBase.Columns("tanggal_jt_penjualan")
            Me.columntotal_harga_penjualan = MyBase.Columns("total_harga_penjualan")
            Me.columnstatus_penjualan = MyBase.Columns("status_penjualan")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnno_nota = New Global.System.Data.DataColumn("no_nota", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_nota)
            Me.columnkode_barang = New Global.System.Data.DataColumn("kode_barang", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkode_barang)
            Me.columnnama_barang = New Global.System.Data.DataColumn("nama_barang", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnama_barang)
            Me.columnbatch = New Global.System.Data.DataColumn("batch", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbatch)
            Me.columnexpired_date = New Global.System.Data.DataColumn("expired_date", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnexpired_date)
            Me.columnjumlah_barang = New Global.System.Data.DataColumn("jumlah_barang", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnjumlah_barang)
            Me.columntanggal = New Global.System.Data.DataColumn("tanggal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntanggal)
            Me.columnketerangan = New Global.System.Data.DataColumn("keterangan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnketerangan)
            Me.columnstatus = New Global.System.Data.DataColumn("status", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstatus)
            Me.columnno_nota_pembelian = New Global.System.Data.DataColumn("no_nota_pembelian", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_nota_pembelian)
            Me.columntanggal_pembelian = New Global.System.Data.DataColumn("tanggal_pembelian", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntanggal_pembelian)
            Me.columnkode_supplier = New Global.System.Data.DataColumn("kode_supplier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkode_supplier)
            Me.columntanggal_jt_pembelian = New Global.System.Data.DataColumn("tanggal_jt_pembelian", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntanggal_jt_pembelian)
            Me.columntotal_harga_pembelian = New Global.System.Data.DataColumn("total_harga_pembelian", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_harga_pembelian)
            Me.columnstatus_pembelian = New Global.System.Data.DataColumn("status_pembelian", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstatus_pembelian)
            Me.columnno_nota_penjualan = New Global.System.Data.DataColumn("no_nota_penjualan", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnno_nota_penjualan)
            Me.columntanggal_penjualan = New Global.System.Data.DataColumn("tanggal_penjualan", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntanggal_penjualan)
            Me.columnkode_customer = New Global.System.Data.DataColumn("kode_customer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnkode_customer)
            Me.columntanggal_jt_penjualan = New Global.System.Data.DataColumn("tanggal_jt_penjualan", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntanggal_jt_penjualan)
            Me.columntotal_harga_penjualan = New Global.System.Data.DataColumn("total_harga_penjualan", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_harga_penjualan)
            Me.columnstatus_penjualan = New Global.System.Data.DataColumn("status_penjualan", GetType(UInteger), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstatus_penjualan)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnno_nota_pembelian, Me.columnno_nota_penjualan}, true))
            Me.columnno_nota.AllowDBNull = false
            Me.columnno_nota.MaxLength = 45
            Me.columnkode_barang.AllowDBNull = false
            Me.columnkode_barang.MaxLength = 45
            Me.columnnama_barang.AllowDBNull = false
            Me.columnnama_barang.MaxLength = 45
            Me.columnbatch.AllowDBNull = false
            Me.columnbatch.MaxLength = 45
            Me.columnexpired_date.AllowDBNull = false
            Me.columnexpired_date.MaxLength = 45
            Me.columnjumlah_barang.AllowDBNull = false
            Me.columnjumlah_barang.MaxLength = 45
            Me.columntanggal.AllowDBNull = false
            Me.columntanggal.MaxLength = 45
            Me.columnketerangan.AllowDBNull = false
            Me.columnketerangan.MaxLength = 45
            Me.columnstatus.AllowDBNull = false
            Me.columnno_nota_pembelian.AllowDBNull = false
            Me.columnno_nota_pembelian.MaxLength = 45
            Me.columntanggal_pembelian.AllowDBNull = false
            Me.columnkode_supplier.AllowDBNull = false
            Me.columnkode_supplier.MaxLength = 45
            Me.columntanggal_jt_pembelian.AllowDBNull = false
            Me.columntotal_harga_pembelian.AllowDBNull = false
            Me.columnstatus_pembelian.AllowDBNull = false
            Me.columnno_nota_penjualan.AllowDBNull = false
            Me.columnno_nota_penjualan.MaxLength = 45
            Me.columntanggal_penjualan.AllowDBNull = false
            Me.columnkode_customer.AllowDBNull = false
            Me.columnkode_customer.MaxLength = 45
            Me.columntanggal_jt_penjualan.AllowDBNull = false
            Me.columntotal_harga_penjualan.AllowDBNull = false
            Me.columnstatus_penjualan.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newprint_detail_stokRow() As print_detail_stokRow
            Return CType(Me.NewRow,print_detail_stokRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New print_detail_stokRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(print_detail_stokRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.print_detail_stokRowChangedEvent) Is Nothing) Then
                RaiseEvent print_detail_stokRowChanged(Me, New print_detail_stokRowChangeEvent(CType(e.Row,print_detail_stokRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.print_detail_stokRowChangingEvent) Is Nothing) Then
                RaiseEvent print_detail_stokRowChanging(Me, New print_detail_stokRowChangeEvent(CType(e.Row,print_detail_stokRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.print_detail_stokRowDeletedEvent) Is Nothing) Then
                RaiseEvent print_detail_stokRowDeleted(Me, New print_detail_stokRowChangeEvent(CType(e.Row,print_detail_stokRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.print_detail_stokRowDeletingEvent) Is Nothing) Then
                RaiseEvent print_detail_stokRowDeleting(Me, New print_detail_stokRowChangeEvent(CType(e.Row,print_detail_stokRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removeprint_detail_stokRow(ByVal row As print_detail_stokRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As apotikDataSetview = New apotikDataSetview()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "print_detail_stokDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class nota_pembelianRow
        Inherits Global.System.Data.DataRow
        
        Private tablenota_pembelian As nota_pembelianDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablenota_pembelian = CType(Me.Table,nota_pembelianDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property no_nota_pembelian() As String
            Get
                Return CType(Me(Me.tablenota_pembelian.no_nota_pembelianColumn),String)
            End Get
            Set
                Me(Me.tablenota_pembelian.no_nota_pembelianColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tanggal_pembelian() As Date
            Get
                Return CType(Me(Me.tablenota_pembelian.tanggal_pembelianColumn),Date)
            End Get
            Set
                Me(Me.tablenota_pembelian.tanggal_pembelianColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kode_supplier() As String
            Get
                Return CType(Me(Me.tablenota_pembelian.kode_supplierColumn),String)
            End Get
            Set
                Me(Me.tablenota_pembelian.kode_supplierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tanggal_jt_pembelian() As Date
            Get
                Return CType(Me(Me.tablenota_pembelian.tanggal_jt_pembelianColumn),Date)
            End Get
            Set
                Me(Me.tablenota_pembelian.tanggal_jt_pembelianColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property total_harga_pembelian() As UInteger
            Get
                Return CType(Me(Me.tablenota_pembelian.total_harga_pembelianColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_pembelian.total_harga_pembelianColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kode_barang_pembelian() As String
            Get
                Return CType(Me(Me.tablenota_pembelian.kode_barang_pembelianColumn),String)
            End Get
            Set
                Me(Me.tablenota_pembelian.kode_barang_pembelianColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nama_barang() As String
            Get
                Return CType(Me(Me.tablenota_pembelian.nama_barangColumn),String)
            End Get
            Set
                Me(Me.tablenota_pembelian.nama_barangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property batch_pembelian() As String
            Get
                Return CType(Me(Me.tablenota_pembelian.batch_pembelianColumn),String)
            End Get
            Set
                Me(Me.tablenota_pembelian.batch_pembelianColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property expired_date() As Date
            Get
                Return CType(Me(Me.tablenota_pembelian.expired_dateColumn),Date)
            End Get
            Set
                Me(Me.tablenota_pembelian.expired_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property harga_beli() As UInteger
            Get
                Return CType(Me(Me.tablenota_pembelian.harga_beliColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_pembelian.harga_beliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property jumlah_barang() As UInteger
            Get
                Return CType(Me(Me.tablenota_pembelian.jumlah_barangColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_pembelian.jumlah_barangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property discount_percent() As UInteger
            Get
                Return CType(Me(Me.tablenota_pembelian.discount_percentColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_pembelian.discount_percentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property total_harga() As UInteger
            Get
                Return CType(Me(Me.tablenota_pembelian.total_hargaColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_pembelian.total_hargaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property delete() As UInteger
            Get
                Return CType(Me(Me.tablenota_pembelian.deleteColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_pembelian.deleteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hapus() As UInteger
            Get
                Return CType(Me(Me.tablenota_pembelian.HapusColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_pembelian.HapusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property retur() As UInteger
            Get
                Return CType(Me(Me.tablenota_pembelian.returColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_pembelian.returColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class nota_penjualanRow
        Inherits Global.System.Data.DataRow
        
        Private tablenota_penjualan As nota_penjualanDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablenota_penjualan = CType(Me.Table,nota_penjualanDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property no_nota_penjualan() As String
            Get
                Return CType(Me(Me.tablenota_penjualan.no_nota_penjualanColumn),String)
            End Get
            Set
                Me(Me.tablenota_penjualan.no_nota_penjualanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property no_pajak() As String
            Get
                Return CType(Me(Me.tablenota_penjualan.no_pajakColumn),String)
            End Get
            Set
                Me(Me.tablenota_penjualan.no_pajakColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tanggal_penjualan() As Date
            Get
                Return CType(Me(Me.tablenota_penjualan.tanggal_penjualanColumn),Date)
            End Get
            Set
                Me(Me.tablenota_penjualan.tanggal_penjualanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kode_customer() As String
            Get
                Return CType(Me(Me.tablenota_penjualan.kode_customerColumn),String)
            End Get
            Set
                Me(Me.tablenota_penjualan.kode_customerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tanggal_jt_penjualan() As Date
            Get
                Return CType(Me(Me.tablenota_penjualan.tanggal_jt_penjualanColumn),Date)
            End Get
            Set
                Me(Me.tablenota_penjualan.tanggal_jt_penjualanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property total_harga_penjualan() As Integer
            Get
                Return CType(Me(Me.tablenota_penjualan.total_harga_penjualanColumn),Integer)
            End Get
            Set
                Me(Me.tablenota_penjualan.total_harga_penjualanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kode_barang() As String
            Get
                Return CType(Me(Me.tablenota_penjualan.kode_barangColumn),String)
            End Get
            Set
                Me(Me.tablenota_penjualan.kode_barangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nama_barang() As String
            Get
                Return CType(Me(Me.tablenota_penjualan.nama_barangColumn),String)
            End Get
            Set
                Me(Me.tablenota_penjualan.nama_barangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property batch() As String
            Get
                Return CType(Me(Me.tablenota_penjualan.batchColumn),String)
            End Get
            Set
                Me(Me.tablenota_penjualan.batchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property expired_date() As Date
            Get
                Return CType(Me(Me.tablenota_penjualan.expired_dateColumn),Date)
            End Get
            Set
                Me(Me.tablenota_penjualan.expired_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property harga_jual() As UInteger
            Get
                Return CType(Me(Me.tablenota_penjualan.harga_jualColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_penjualan.harga_jualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property jumlah_barang() As UInteger
            Get
                Return CType(Me(Me.tablenota_penjualan.jumlah_barangColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_penjualan.jumlah_barangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property discount_percent() As UInteger
            Get
                Return CType(Me(Me.tablenota_penjualan.discount_percentColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_penjualan.discount_percentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property total_harga() As UInteger
            Get
                Return CType(Me(Me.tablenota_penjualan.total_hargaColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_penjualan.total_hargaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property delete() As UInteger
            Get
                Return CType(Me(Me.tablenota_penjualan.deleteColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_penjualan.deleteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hapus() As UInteger
            Get
                Return CType(Me(Me.tablenota_penjualan.HapusColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_penjualan.HapusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property retur() As UInteger
            Get
                Return CType(Me(Me.tablenota_penjualan.returColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_penjualan.returColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class nota_retur_beliRow
        Inherits Global.System.Data.DataRow
        
        Private tablenota_retur_beli As nota_retur_beliDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablenota_retur_beli = CType(Me.Table,nota_retur_beliDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property no_retur_pembelian() As String
            Get
                Return CType(Me(Me.tablenota_retur_beli.no_retur_pembelianColumn),String)
            End Get
            Set
                Me(Me.tablenota_retur_beli.no_retur_pembelianColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tanggal_retur_pembelian() As Date
            Get
                Return CType(Me(Me.tablenota_retur_beli.tanggal_retur_pembelianColumn),Date)
            End Get
            Set
                Me(Me.tablenota_retur_beli.tanggal_retur_pembelianColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kode_supplier() As String
            Get
                Return CType(Me(Me.tablenota_retur_beli.kode_supplierColumn),String)
            End Get
            Set
                Me(Me.tablenota_retur_beli.kode_supplierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property no_nota_pembelian() As String
            Get
                Return CType(Me(Me.tablenota_retur_beli.no_nota_pembelianColumn),String)
            End Get
            Set
                Me(Me.tablenota_retur_beli.no_nota_pembelianColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totalharga_retur_pembelian() As UInteger
            Get
                Return CType(Me(Me.tablenota_retur_beli.totalharga_retur_pembelianColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_retur_beli.totalharga_retur_pembelianColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kode_barang() As String
            Get
                Return CType(Me(Me.tablenota_retur_beli.kode_barangColumn),String)
            End Get
            Set
                Me(Me.tablenota_retur_beli.kode_barangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nama_barang() As String
            Get
                Return CType(Me(Me.tablenota_retur_beli.nama_barangColumn),String)
            End Get
            Set
                Me(Me.tablenota_retur_beli.nama_barangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property batch() As String
            Get
                Return CType(Me(Me.tablenota_retur_beli.batchColumn),String)
            End Get
            Set
                Me(Me.tablenota_retur_beli.batchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property expired_date() As Date
            Get
                Return CType(Me(Me.tablenota_retur_beli.expired_dateColumn),Date)
            End Get
            Set
                Me(Me.tablenota_retur_beli.expired_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property harga_beli() As UInteger
            Get
                Return CType(Me(Me.tablenota_retur_beli.harga_beliColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_retur_beli.harga_beliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property jumlah_barang() As UInteger
            Get
                Return CType(Me(Me.tablenota_retur_beli.jumlah_barangColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_retur_beli.jumlah_barangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property discount_percent() As UInteger
            Get
                Return CType(Me(Me.tablenota_retur_beli.discount_percentColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_retur_beli.discount_percentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property total_harga() As UInteger
            Get
                Return CType(Me(Me.tablenota_retur_beli.total_hargaColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_retur_beli.total_hargaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property delete() As UInteger
            Get
                Return CType(Me(Me.tablenota_retur_beli.deleteColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_retur_beli.deleteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property retur() As UInteger
            Get
                Return CType(Me(Me.tablenota_retur_beli.returColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_retur_beli.returColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class nota_retur_jualRow
        Inherits Global.System.Data.DataRow
        
        Private tablenota_retur_jual As nota_retur_jualDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablenota_retur_jual = CType(Me.Table,nota_retur_jualDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property no_retur_penjualan() As String
            Get
                Return CType(Me(Me.tablenota_retur_jual.no_retur_penjualanColumn),String)
            End Get
            Set
                Me(Me.tablenota_retur_jual.no_retur_penjualanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tanggal_retur_penjualan() As Date
            Get
                Return CType(Me(Me.tablenota_retur_jual.tanggal_retur_penjualanColumn),Date)
            End Get
            Set
                Me(Me.tablenota_retur_jual.tanggal_retur_penjualanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kode_cust() As String
            Get
                Return CType(Me(Me.tablenota_retur_jual.kode_custColumn),String)
            End Get
            Set
                Me(Me.tablenota_retur_jual.kode_custColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property no_nota_penjualan() As String
            Get
                Return CType(Me(Me.tablenota_retur_jual.no_nota_penjualanColumn),String)
            End Get
            Set
                Me(Me.tablenota_retur_jual.no_nota_penjualanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totalharga_retur_penjualan() As UInteger
            Get
                Return CType(Me(Me.tablenota_retur_jual.totalharga_retur_penjualanColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_retur_jual.totalharga_retur_penjualanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kode_barang() As String
            Get
                Return CType(Me(Me.tablenota_retur_jual.kode_barangColumn),String)
            End Get
            Set
                Me(Me.tablenota_retur_jual.kode_barangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nama_barang() As String
            Get
                Return CType(Me(Me.tablenota_retur_jual.nama_barangColumn),String)
            End Get
            Set
                Me(Me.tablenota_retur_jual.nama_barangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property batch() As String
            Get
                Return CType(Me(Me.tablenota_retur_jual.batchColumn),String)
            End Get
            Set
                Me(Me.tablenota_retur_jual.batchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property expired_date() As Date
            Get
                Return CType(Me(Me.tablenota_retur_jual.expired_dateColumn),Date)
            End Get
            Set
                Me(Me.tablenota_retur_jual.expired_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property harga_jual() As UInteger
            Get
                Return CType(Me(Me.tablenota_retur_jual.harga_jualColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_retur_jual.harga_jualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property jumlah_barang() As UInteger
            Get
                Return CType(Me(Me.tablenota_retur_jual.jumlah_barangColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_retur_jual.jumlah_barangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property discount_percent() As UInteger
            Get
                Return CType(Me(Me.tablenota_retur_jual.discount_percentColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_retur_jual.discount_percentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property total_harga() As UInteger
            Get
                Return CType(Me(Me.tablenota_retur_jual.total_hargaColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_retur_jual.total_hargaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property delete() As UInteger
            Get
                Return CType(Me(Me.tablenota_retur_jual.deleteColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_retur_jual.deleteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property retur() As UInteger
            Get
                Return CType(Me(Me.tablenota_retur_jual.returColumn),UInteger)
            End Get
            Set
                Me(Me.tablenota_retur_jual.returColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class print_detail_stokRow
        Inherits Global.System.Data.DataRow
        
        Private tableprint_detail_stok As print_detail_stokDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableprint_detail_stok = CType(Me.Table,print_detail_stokDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property no_nota() As String
            Get
                Return CType(Me(Me.tableprint_detail_stok.no_notaColumn),String)
            End Get
            Set
                Me(Me.tableprint_detail_stok.no_notaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kode_barang() As String
            Get
                Return CType(Me(Me.tableprint_detail_stok.kode_barangColumn),String)
            End Get
            Set
                Me(Me.tableprint_detail_stok.kode_barangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nama_barang() As String
            Get
                Return CType(Me(Me.tableprint_detail_stok.nama_barangColumn),String)
            End Get
            Set
                Me(Me.tableprint_detail_stok.nama_barangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property batch() As String
            Get
                Return CType(Me(Me.tableprint_detail_stok.batchColumn),String)
            End Get
            Set
                Me(Me.tableprint_detail_stok.batchColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property expired_date() As String
            Get
                Return CType(Me(Me.tableprint_detail_stok.expired_dateColumn),String)
            End Get
            Set
                Me(Me.tableprint_detail_stok.expired_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property jumlah_barang() As String
            Get
                Return CType(Me(Me.tableprint_detail_stok.jumlah_barangColumn),String)
            End Get
            Set
                Me(Me.tableprint_detail_stok.jumlah_barangColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tanggal() As String
            Get
                Return CType(Me(Me.tableprint_detail_stok.tanggalColumn),String)
            End Get
            Set
                Me(Me.tableprint_detail_stok.tanggalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property keterangan() As String
            Get
                Return CType(Me(Me.tableprint_detail_stok.keteranganColumn),String)
            End Get
            Set
                Me(Me.tableprint_detail_stok.keteranganColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property status() As UInteger
            Get
                Return CType(Me(Me.tableprint_detail_stok.statusColumn),UInteger)
            End Get
            Set
                Me(Me.tableprint_detail_stok.statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property no_nota_pembelian() As String
            Get
                Return CType(Me(Me.tableprint_detail_stok.no_nota_pembelianColumn),String)
            End Get
            Set
                Me(Me.tableprint_detail_stok.no_nota_pembelianColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tanggal_pembelian() As Date
            Get
                Return CType(Me(Me.tableprint_detail_stok.tanggal_pembelianColumn),Date)
            End Get
            Set
                Me(Me.tableprint_detail_stok.tanggal_pembelianColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kode_supplier() As String
            Get
                Return CType(Me(Me.tableprint_detail_stok.kode_supplierColumn),String)
            End Get
            Set
                Me(Me.tableprint_detail_stok.kode_supplierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tanggal_jt_pembelian() As Date
            Get
                Return CType(Me(Me.tableprint_detail_stok.tanggal_jt_pembelianColumn),Date)
            End Get
            Set
                Me(Me.tableprint_detail_stok.tanggal_jt_pembelianColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property total_harga_pembelian() As UInteger
            Get
                Return CType(Me(Me.tableprint_detail_stok.total_harga_pembelianColumn),UInteger)
            End Get
            Set
                Me(Me.tableprint_detail_stok.total_harga_pembelianColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property status_pembelian() As UInteger
            Get
                Return CType(Me(Me.tableprint_detail_stok.status_pembelianColumn),UInteger)
            End Get
            Set
                Me(Me.tableprint_detail_stok.status_pembelianColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property no_nota_penjualan() As String
            Get
                Return CType(Me(Me.tableprint_detail_stok.no_nota_penjualanColumn),String)
            End Get
            Set
                Me(Me.tableprint_detail_stok.no_nota_penjualanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tanggal_penjualan() As Date
            Get
                Return CType(Me(Me.tableprint_detail_stok.tanggal_penjualanColumn),Date)
            End Get
            Set
                Me(Me.tableprint_detail_stok.tanggal_penjualanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property kode_customer() As String
            Get
                Return CType(Me(Me.tableprint_detail_stok.kode_customerColumn),String)
            End Get
            Set
                Me(Me.tableprint_detail_stok.kode_customerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property tanggal_jt_penjualan() As Date
            Get
                Return CType(Me(Me.tableprint_detail_stok.tanggal_jt_penjualanColumn),Date)
            End Get
            Set
                Me(Me.tableprint_detail_stok.tanggal_jt_penjualanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property total_harga_penjualan() As Integer
            Get
                Return CType(Me(Me.tableprint_detail_stok.total_harga_penjualanColumn),Integer)
            End Get
            Set
                Me(Me.tableprint_detail_stok.total_harga_penjualanColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property status_penjualan() As UInteger
            Get
                Return CType(Me(Me.tableprint_detail_stok.status_penjualanColumn),UInteger)
            End Get
            Set
                Me(Me.tableprint_detail_stok.status_penjualanColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class nota_pembelianRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As nota_pembelianRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As nota_pembelianRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As nota_pembelianRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class nota_penjualanRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As nota_penjualanRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As nota_penjualanRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As nota_penjualanRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class nota_retur_beliRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As nota_retur_beliRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As nota_retur_beliRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As nota_retur_beliRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class nota_retur_jualRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As nota_retur_jualRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As nota_retur_jualRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As nota_retur_jualRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class print_detail_stokRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As print_detail_stokRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As print_detail_stokRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As print_detail_stokRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace apotikDataSetviewTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class nota_pembelianTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "nota_pembelian"
            tableMapping.ColumnMappings.Add("no_nota_pembelian", "no_nota_pembelian")
            tableMapping.ColumnMappings.Add("tanggal_pembelian", "tanggal_pembelian")
            tableMapping.ColumnMappings.Add("kode_supplier", "kode_supplier")
            tableMapping.ColumnMappings.Add("tanggal_jt_pembelian", "tanggal_jt_pembelian")
            tableMapping.ColumnMappings.Add("total_harga_pembelian", "total_harga_pembelian")
            tableMapping.ColumnMappings.Add("kode_barang_pembelian", "kode_barang_pembelian")
            tableMapping.ColumnMappings.Add("nama_barang", "nama_barang")
            tableMapping.ColumnMappings.Add("batch_pembelian", "batch_pembelian")
            tableMapping.ColumnMappings.Add("expired_date", "expired_date")
            tableMapping.ColumnMappings.Add("harga_beli", "harga_beli")
            tableMapping.ColumnMappings.Add("jumlah_barang", "jumlah_barang")
            tableMapping.ColumnMappings.Add("discount_percent", "discount_percent")
            tableMapping.ColumnMappings.Add("total_harga", "total_harga")
            tableMapping.ColumnMappings.Add("delete", "delete")
            tableMapping.ColumnMappings.Add("Hapus", "Hapus")
            tableMapping.ColumnMappings.Add("retur", "retur")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.apotikConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `no_nota_pembelian`, `tanggal_pembelian`, `kode_supplier`, `tanggal_jt_pem"& _ 
                "belian`, `total_harga_pembelian`, `kode_barang_pembelian`, `nama_barang`, `batch"& _ 
                "_pembelian`, `expired_date`, `harga_beli`, `jumlah_barang`, `discount_percent`, "& _ 
                "`total_harga`, `delete`, `Hapus`, `retur` FROM `apotik`.`nota_pembelian`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As apotikDataSetview.nota_pembelianDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As apotikDataSetview.nota_pembelianDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As apotikDataSetview.nota_pembelianDataTable = New apotikDataSetview.nota_pembelianDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class nota_penjualanTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "nota_penjualan"
            tableMapping.ColumnMappings.Add("no_nota_penjualan", "no_nota_penjualan")
            tableMapping.ColumnMappings.Add("no_pajak", "no_pajak")
            tableMapping.ColumnMappings.Add("tanggal_penjualan", "tanggal_penjualan")
            tableMapping.ColumnMappings.Add("kode_customer", "kode_customer")
            tableMapping.ColumnMappings.Add("tanggal_jt_penjualan", "tanggal_jt_penjualan")
            tableMapping.ColumnMappings.Add("total_harga_penjualan", "total_harga_penjualan")
            tableMapping.ColumnMappings.Add("kode_barang", "kode_barang")
            tableMapping.ColumnMappings.Add("nama_barang", "nama_barang")
            tableMapping.ColumnMappings.Add("batch", "batch")
            tableMapping.ColumnMappings.Add("expired_date", "expired_date")
            tableMapping.ColumnMappings.Add("harga_jual", "harga_jual")
            tableMapping.ColumnMappings.Add("jumlah_barang", "jumlah_barang")
            tableMapping.ColumnMappings.Add("discount_percent", "discount_percent")
            tableMapping.ColumnMappings.Add("total_harga", "total_harga")
            tableMapping.ColumnMappings.Add("delete", "delete")
            tableMapping.ColumnMappings.Add("Hapus", "Hapus")
            tableMapping.ColumnMappings.Add("retur", "retur")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.apotikConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `no_nota_penjualan`, `no_pajak`, `tanggal_penjualan`, `kode_customer`, `ta"& _ 
                "nggal_jt_penjualan`, `total_harga_penjualan`, `kode_barang`, `nama_barang`, `bat"& _ 
                "ch`, `expired_date`, `harga_jual`, `jumlah_barang`, `discount_percent`, `total_h"& _ 
                "arga`, `delete`, `Hapus`, `retur` FROM `apotik`.`nota_penjualan`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As apotikDataSetview.nota_penjualanDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As apotikDataSetview.nota_penjualanDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As apotikDataSetview.nota_penjualanDataTable = New apotikDataSetview.nota_penjualanDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class nota_retur_beliTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "nota_retur_beli"
            tableMapping.ColumnMappings.Add("no_retur_pembelian", "no_retur_pembelian")
            tableMapping.ColumnMappings.Add("tanggal_retur_pembelian", "tanggal_retur_pembelian")
            tableMapping.ColumnMappings.Add("kode_supplier", "kode_supplier")
            tableMapping.ColumnMappings.Add("no_nota_pembelian", "no_nota_pembelian")
            tableMapping.ColumnMappings.Add("totalharga_retur_pembelian", "totalharga_retur_pembelian")
            tableMapping.ColumnMappings.Add("kode_barang", "kode_barang")
            tableMapping.ColumnMappings.Add("nama_barang", "nama_barang")
            tableMapping.ColumnMappings.Add("batch", "batch")
            tableMapping.ColumnMappings.Add("expired_date", "expired_date")
            tableMapping.ColumnMappings.Add("harga_beli", "harga_beli")
            tableMapping.ColumnMappings.Add("jumlah_barang", "jumlah_barang")
            tableMapping.ColumnMappings.Add("discount_percent", "discount_percent")
            tableMapping.ColumnMappings.Add("total_harga", "total_harga")
            tableMapping.ColumnMappings.Add("delete", "delete")
            tableMapping.ColumnMappings.Add("retur", "retur")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.apotikConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `no_retur_pembelian`, `tanggal_retur_pembelian`, `kode_supplier`, `no_nota"& _ 
                "_pembelian`, `totalharga_retur_pembelian`, `kode_barang`, `nama_barang`, `batch`"& _ 
                ", `expired_date`, `harga_beli`, `jumlah_barang`, `discount_percent`, `total_harg"& _ 
                "a`, `delete`, `retur` FROM `apotik`.`nota_retur_beli`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As apotikDataSetview.nota_retur_beliDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As apotikDataSetview.nota_retur_beliDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As apotikDataSetview.nota_retur_beliDataTable = New apotikDataSetview.nota_retur_beliDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class nota_retur_jualTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "nota_retur_jual"
            tableMapping.ColumnMappings.Add("no_retur_penjualan", "no_retur_penjualan")
            tableMapping.ColumnMappings.Add("tanggal_retur_penjualan", "tanggal_retur_penjualan")
            tableMapping.ColumnMappings.Add("kode_cust", "kode_cust")
            tableMapping.ColumnMappings.Add("no_nota_penjualan", "no_nota_penjualan")
            tableMapping.ColumnMappings.Add("totalharga_retur_penjualan", "totalharga_retur_penjualan")
            tableMapping.ColumnMappings.Add("kode_barang", "kode_barang")
            tableMapping.ColumnMappings.Add("nama_barang", "nama_barang")
            tableMapping.ColumnMappings.Add("batch", "batch")
            tableMapping.ColumnMappings.Add("expired_date", "expired_date")
            tableMapping.ColumnMappings.Add("harga_jual", "harga_jual")
            tableMapping.ColumnMappings.Add("jumlah_barang", "jumlah_barang")
            tableMapping.ColumnMappings.Add("discount_percent", "discount_percent")
            tableMapping.ColumnMappings.Add("total_harga", "total_harga")
            tableMapping.ColumnMappings.Add("delete", "delete")
            tableMapping.ColumnMappings.Add("retur", "retur")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.apotikConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `no_retur_penjualan`, `tanggal_retur_penjualan`, `kode_cust`, `no_nota_pen"& _ 
                "jualan`, `totalharga_retur_penjualan`, `kode_barang`, `nama_barang`, `batch`, `e"& _ 
                "xpired_date`, `harga_jual`, `jumlah_barang`, `discount_percent`, `total_harga`, "& _ 
                "`delete`, `retur` FROM `apotik`.`nota_retur_jual`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As apotikDataSetview.nota_retur_jualDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As apotikDataSetview.nota_retur_jualDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As apotikDataSetview.nota_retur_jualDataTable = New apotikDataSetview.nota_retur_jualDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class print_detail_stokTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.MySql.Data.MySqlClient.MySqlDataAdapter
        
        Private _connection As Global.MySql.Data.MySqlClient.MySqlConnection
        
        Private _transaction As Global.MySql.Data.MySqlClient.MySqlTransaction
        
        Private _commandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.MySql.Data.MySqlClient.MySqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.MySql.Data.MySqlClient.MySqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.MySql.Data.MySqlClient.MySqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.MySql.Data.MySqlClient.MySqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.MySql.Data.MySqlClient.MySqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.MySql.Data.MySqlClient.MySqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "print_detail_stok"
            tableMapping.ColumnMappings.Add("no_nota", "no_nota")
            tableMapping.ColumnMappings.Add("kode_barang", "kode_barang")
            tableMapping.ColumnMappings.Add("nama_barang", "nama_barang")
            tableMapping.ColumnMappings.Add("batch", "batch")
            tableMapping.ColumnMappings.Add("expired_date", "expired_date")
            tableMapping.ColumnMappings.Add("jumlah_barang", "jumlah_barang")
            tableMapping.ColumnMappings.Add("tanggal", "tanggal")
            tableMapping.ColumnMappings.Add("keterangan", "keterangan")
            tableMapping.ColumnMappings.Add("status", "status")
            tableMapping.ColumnMappings.Add("no_nota_pembelian", "no_nota_pembelian")
            tableMapping.ColumnMappings.Add("tanggal_pembelian", "tanggal_pembelian")
            tableMapping.ColumnMappings.Add("kode_supplier", "kode_supplier")
            tableMapping.ColumnMappings.Add("tanggal_jt_pembelian", "tanggal_jt_pembelian")
            tableMapping.ColumnMappings.Add("total_harga_pembelian", "total_harga_pembelian")
            tableMapping.ColumnMappings.Add("status_pembelian", "status_pembelian")
            tableMapping.ColumnMappings.Add("no_nota_penjualan", "no_nota_penjualan")
            tableMapping.ColumnMappings.Add("tanggal_penjualan", "tanggal_penjualan")
            tableMapping.ColumnMappings.Add("kode_customer", "kode_customer")
            tableMapping.ColumnMappings.Add("tanggal_jt_penjualan", "tanggal_jt_penjualan")
            tableMapping.ColumnMappings.Add("total_harga_penjualan", "total_harga_penjualan")
            tableMapping.ColumnMappings.Add("status_penjualan", "status_penjualan")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.MySql.Data.MySqlClient.MySqlConnection()
            Me._connection.ConnectionString = Global.WindowsApplication1.My.MySettings.Default.apotikConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.MySql.Data.MySqlClient.MySqlCommand(0) {}
            Me._commandCollection(0) = New Global.MySql.Data.MySqlClient.MySqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT `no_nota`, `kode_barang`, `nama_barang`, `batch`, `expired_date`, `jumlah_"& _ 
                "barang`, `tanggal`, `keterangan`, `status`, `no_nota_pembelian`, `tanggal_pembel"& _ 
                "ian`, `kode_supplier`, `tanggal_jt_pembelian`, `total_harga_pembelian`, `status_"& _ 
                "pembelian`, `no_nota_penjualan`, `tanggal_penjualan`, `kode_customer`, `tanggal_"& _ 
                "jt_penjualan`, `total_harga_penjualan`, `status_penjualan` FROM `apotik`.`print_"& _ 
                "detail_stok`"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As apotikDataSetview.print_detail_stokDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As apotikDataSetview.print_detail_stokDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As apotikDataSetview.print_detail_stokDataTable = New apotikDataSetview.print_detail_stokDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As apotikDataSetview, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As apotikDataSetview, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As apotikDataSetview, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As apotikDataSetview) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
